<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>FlowPipe: INode Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">FlowPipe
   </div>
   <div id="projectbrief">Flow based programming framework in Python.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d9/d44/classflowpipe_1_1node_1_1INode.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="../../d5/dd5/classflowpipe_1_1node_1_1INode-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">INode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Holds input and output Plugs and a method for computing.  
 <a href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for INode:</div>
<div class="dyncontent">
<div class="center"><img src="../../d4/dda/classflowpipe_1_1node_1_1INode__inherit__graph.png" border="0" usemap="#INode_inherit__map" alt="Inheritance graph"/></div>
<map name="INode_inherit__map" id="INode_inherit__map">
<area shape="rect" id="node3" href="../../dc/d7c/classflowpipe_1_1node_1_1FunctionNode.xhtml" title="Wrap a function into a Node. " alt="" coords="5,155,108,181"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for INode:</div>
<div class="dyncontent">
<div class="center"><img src="../../db/d0e/classflowpipe_1_1node_1_1INode__coll__graph.png" border="0" usemap="#INode_coll__map" alt="Collaboration graph"/></div>
<map name="INode_coll__map" id="INode_coll__map">
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a18477ebecc1b01f4434e23f80c776027"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a18477ebecc1b01f4434e23f80c776027">__init__</a> (self, <a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#ab74e6bf80237ddc4109968cedc58c151">name</a>=None, <a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#afc486b0767ef05e2dc12f5b98be72902">identifier</a>=None, <a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a9cfcb724bbf4bae5f97bc17cf58cf522">metadata</a>=None, graph='default')</td></tr>
<tr class="memdesc:a18477ebecc1b01f4434e23f80c776027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the input and output dictionaries and the name.  <a href="#a18477ebecc1b01f4434e23f80c776027">More...</a><br /></td></tr>
<tr class="separator:a18477ebecc1b01f4434e23f80c776027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04fb49fe8164306b5222027c7dda3f22"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a04fb49fe8164306b5222027c7dda3f22">__unicode__</a> (self)</td></tr>
<tr class="memdesc:a04fb49fe8164306b5222027c7dda3f22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Show all input and output Plugs.  <a href="#a04fb49fe8164306b5222027c7dda3f22">More...</a><br /></td></tr>
<tr class="separator:a04fb49fe8164306b5222027c7dda3f22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23e8041ce1015febe4fdace3225714f9"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a23e8041ce1015febe4fdace3225714f9">__str__</a> (self)</td></tr>
<tr class="memdesc:a23e8041ce1015febe4fdace3225714f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Show all input and output Plugs.  <a href="#a23e8041ce1015febe4fdace3225714f9">More...</a><br /></td></tr>
<tr class="separator:a23e8041ce1015febe4fdace3225714f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40739595e99c1a1286ab5ca2e549d458"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a40739595e99c1a1286ab5ca2e549d458">is_dirty</a> (self)</td></tr>
<tr class="memdesc:a40739595e99c1a1286ab5ca2e549d458"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether any of the input Plug data has changed and is dirty.  <a href="#a40739595e99c1a1286ab5ca2e549d458">More...</a><br /></td></tr>
<tr class="separator:a40739595e99c1a1286ab5ca2e549d458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5249260cefa40186d2ab0bacfff40eaf"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a5249260cefa40186d2ab0bacfff40eaf">upstream_nodes</a> (self)</td></tr>
<tr class="memdesc:a5249260cefa40186d2ab0bacfff40eaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Upper level Nodes feed inputs into this Node.  <a href="#a5249260cefa40186d2ab0bacfff40eaf">More...</a><br /></td></tr>
<tr class="separator:a5249260cefa40186d2ab0bacfff40eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af20d9fc06f588e296027d3bd7a568960"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#af20d9fc06f588e296027d3bd7a568960">downstream_nodes</a> (self)</td></tr>
<tr class="memdesc:af20d9fc06f588e296027d3bd7a568960"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lower level nodes that this node feeds output to.  <a href="#af20d9fc06f588e296027d3bd7a568960">More...</a><br /></td></tr>
<tr class="separator:af20d9fc06f588e296027d3bd7a568960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5407a166f19c69fe8ebecf990621c3e8"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a5407a166f19c69fe8ebecf990621c3e8">evaluate</a> (self)</td></tr>
<tr class="memdesc:a5407a166f19c69fe8ebecf990621c3e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute this Node, log it and clean the input Plugs.  <a href="#a5407a166f19c69fe8ebecf990621c3e8">More...</a><br /></td></tr>
<tr class="separator:a5407a166f19c69fe8ebecf990621c3e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59fb65ca945ad9b32417d7e2dddb239f"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a59fb65ca945ad9b32417d7e2dddb239f">compute</a> (self, args, kwargs)</td></tr>
<tr class="memdesc:a59fb65ca945ad9b32417d7e2dddb239f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implement the data manipulation in the subclass.  <a href="#a59fb65ca945ad9b32417d7e2dddb239f">More...</a><br /></td></tr>
<tr class="separator:a59fb65ca945ad9b32417d7e2dddb239f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca47414ad964eee75e3d5d8779ab8574"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#aca47414ad964eee75e3d5d8779ab8574">on_input_plug_set_dirty</a> (self)</td></tr>
<tr class="memdesc:aca47414ad964eee75e3d5d8779ab8574"><td class="mdescLeft">&#160;</td><td class="mdescRight">Propagate the dirty state to the connected downstream nodes.  <a href="#aca47414ad964eee75e3d5d8779ab8574">More...</a><br /></td></tr>
<tr class="separator:aca47414ad964eee75e3d5d8779ab8574"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad2fd8b7bbd35cf90e442b27a20e78a2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#aad2fd8b7bbd35cf90e442b27a20e78a2">serialize</a> (self)</td></tr>
<tr class="memdesc:aad2fd8b7bbd35cf90e442b27a20e78a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serialize the node to json.  <a href="#aad2fd8b7bbd35cf90e442b27a20e78a2">More...</a><br /></td></tr>
<tr class="separator:aad2fd8b7bbd35cf90e442b27a20e78a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee89c0220c1165c8eadfaf91540bca5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a5ee89c0220c1165c8eadfaf91540bca5">post_deserialize</a> (self, data)</td></tr>
<tr class="memdesc:a5ee89c0220c1165c8eadfaf91540bca5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform more data operations after initial serialization.  <a href="#a5ee89c0220c1165c8eadfaf91540bca5">More...</a><br /></td></tr>
<tr class="separator:a5ee89c0220c1165c8eadfaf91540bca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca929624c0159704e01e879e1d620ba"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a1ca929624c0159704e01e879e1d620ba">node_repr</a> (self)</td></tr>
<tr class="memdesc:a1ca929624c0159704e01e879e1d620ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">The node formated into a string looking like a node.  <a href="#a1ca929624c0159704e01e879e1d620ba">More...</a><br /></td></tr>
<tr class="separator:a1ca929624c0159704e01e879e1d620ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b6ada072c0782e74259ede825bf15c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a28b6ada072c0782e74259ede825bf15c">list_repr</a> (self)</td></tr>
<tr class="memdesc:a28b6ada072c0782e74259ede825bf15c"><td class="mdescLeft">&#160;</td><td class="mdescRight">List representation of the node showing inputs and their values.  <a href="#a28b6ada072c0782e74259ede825bf15c">More...</a><br /></td></tr>
<tr class="separator:a28b6ada072c0782e74259ede825bf15c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab83469ac024a0f1fa7b0917356be575c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#ab83469ac024a0f1fa7b0917356be575c">all_inputs</a> (self)</td></tr>
<tr class="memdesc:ab83469ac024a0f1fa7b0917356be575c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Collate all input plugs and their sub_plugs into one dictionary.  <a href="#ab83469ac024a0f1fa7b0917356be575c">More...</a><br /></td></tr>
<tr class="separator:ab83469ac024a0f1fa7b0917356be575c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52b6e07332091d6d06e7b970b9ebc9ab"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a52b6e07332091d6d06e7b970b9ebc9ab">all_outputs</a> (self)</td></tr>
<tr class="memdesc:a52b6e07332091d6d06e7b970b9ebc9ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Collate all output plugs and their sub_plugs into one dictionary.  <a href="#a52b6e07332091d6d06e7b970b9ebc9ab">More...</a><br /></td></tr>
<tr class="separator:a52b6e07332091d6d06e7b970b9ebc9ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acc55513b8f622820fc330d57fdb67d57"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#acc55513b8f622820fc330d57fdb67d57">deserialize</a> (data)</td></tr>
<tr class="memdesc:acc55513b8f622820fc330d57fdb67d57"><td class="mdescLeft">&#160;</td><td class="mdescRight">De-serialize from the given json data.  <a href="#acc55513b8f622820fc330d57fdb67d57">More...</a><br /></td></tr>
<tr class="separator:acc55513b8f622820fc330d57fdb67d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ab74e6bf80237ddc4109968cedc58c151"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#ab74e6bf80237ddc4109968cedc58c151">name</a></td></tr>
<tr class="separator:ab74e6bf80237ddc4109968cedc58c151"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc486b0767ef05e2dc12f5b98be72902"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#afc486b0767ef05e2dc12f5b98be72902">identifier</a></td></tr>
<tr class="separator:afc486b0767ef05e2dc12f5b98be72902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afde3b66b6b41bd008469f366fa756e54"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#afde3b66b6b41bd008469f366fa756e54">inputs</a></td></tr>
<tr class="separator:afde3b66b6b41bd008469f366fa756e54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8d743b78404b120589eca8c77c1c2a9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#af8d743b78404b120589eca8c77c1c2a9">outputs</a></td></tr>
<tr class="separator:af8d743b78404b120589eca8c77c1c2a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cfcb724bbf4bae5f97bc17cf58cf522"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a9cfcb724bbf4bae5f97bc17cf58cf522">metadata</a></td></tr>
<tr class="separator:a9cfcb724bbf4bae5f97bc17cf58cf522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36c33cda455902e250ccc64842fb5ddc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a36c33cda455902e250ccc64842fb5ddc">omit</a></td></tr>
<tr class="separator:a36c33cda455902e250ccc64842fb5ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae317848454d4a83291a27290cde639e3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#ae317848454d4a83291a27290cde639e3">file_location</a></td></tr>
<tr class="separator:ae317848454d4a83291a27290cde639e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3378f35ca205fd422d7edb3190867861"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#a3378f35ca205fd422d7edb3190867861">class_name</a></td></tr>
<tr class="separator:a3378f35ca205fd422d7edb3190867861"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:ad76778f87f61ef593a45ebb4ea2d4c4c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#ad76778f87f61ef593a45ebb4ea2d4c4c">_sort_plugs</a> (plugs)</td></tr>
<tr class="memdesc:ad76778f87f61ef593a45ebb4ea2d4c4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort the given plugs alphabetically into an OrderedDict.  <a href="#ad76778f87f61ef593a45ebb4ea2d4c4c">More...</a><br /></td></tr>
<tr class="separator:ad76778f87f61ef593a45ebb4ea2d4c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:adfc4d1824f4ecdcbb04ceafc5bbc933e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml#adfc4d1824f4ecdcbb04ceafc5bbc933e">__metaclass__</a> = ABCMeta</td></tr>
<tr class="separator:adfc4d1824f4ecdcbb04ceafc5bbc933e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Holds input and output Plugs and a method for computing. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a18477ebecc1b01f4434e23f80c776027"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>name</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>identifier</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>metadata</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>graph</em> = <code>'default'</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the input and output dictionaries and the name. </p>
<p>Args: name (str): If not provided, the class name is used. graph (Graph): The graph to add the node to. If set to 'default', the Node is added to the default graph. If set to None, the Node is not added to any grpah. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a04fb49fe8164306b5222027c7dda3f22"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __unicode__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Show all input and output Plugs. </p>

</div>
</div>
<a class="anchor" id="a23e8041ce1015febe4fdace3225714f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __str__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Show all input and output Plugs. </p>

</div>
</div>
<a class="anchor" id="a40739595e99c1a1286ab5ca2e549d458"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def is_dirty </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Whether any of the input Plug data has changed and is dirty. </p>

</div>
</div>
<a class="anchor" id="a5249260cefa40186d2ab0bacfff40eaf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def upstream_nodes </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Upper level Nodes feed inputs into this Node. </p>

</div>
</div>
<a class="anchor" id="af20d9fc06f588e296027d3bd7a568960"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def downstream_nodes </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Lower level nodes that this node feeds output to. </p>

</div>
</div>
<a class="anchor" id="a5407a166f19c69fe8ebecf990621c3e8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def evaluate </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute this Node, log it and clean the input Plugs. </p>
<p>Also push a stat report in the following form containing the Node, evaluation time and timestamp the computation started. </p>

</div>
</div>
<a class="anchor" id="a59fb65ca945ad9b32417d7e2dddb239f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def compute </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implement the data manipulation in the subclass. </p>
<p>Return a dictionary with the outputs from this function. </p>

</div>
</div>
<a class="anchor" id="aca47414ad964eee75e3d5d8779ab8574"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def on_input_plug_set_dirty </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Propagate the dirty state to the connected downstream nodes. </p>

</div>
</div>
<a class="anchor" id="aad2fd8b7bbd35cf90e442b27a20e78a2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def serialize </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Serialize the node to json. </p>

</div>
</div>
<a class="anchor" id="acc55513b8f622820fc330d57fdb67d57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">def deserialize </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>De-serialize from the given json data. </p>

</div>
</div>
<a class="anchor" id="a5ee89c0220c1165c8eadfaf91540bca5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def post_deserialize </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform more data operations after initial serialization. </p>

</div>
</div>
<a class="anchor" id="a1ca929624c0159704e01e879e1d620ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def node_repr </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The node formated into a string looking like a node. </p>
<p>+---------------&mdash;+ | Node.Name | |---------------&mdash;| % compound_in | o compound_in-1 | o compound_in-2 | o in | | out o | compound_out % | compound_out-1 o | compound_out-2 o +---------------&mdash;+ </p>

</div>
</div>
<a class="anchor" id="a28b6ada072c0782e74259ede825bf15c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def list_repr </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List representation of the node showing inputs and their values. </p>
<p>Node [i] in: "A" [i] in_compound [i] in_compound.0: "B" [i] in_compound.1 &lt;&lt; Node1.out [o] compound_out [o] in_compound.0: null [o] compound_out.1 &gt;&gt; Node2.in, Node3.in [o] out &gt;&gt; Node4.in </p>

</div>
</div>
<a class="anchor" id="ab83469ac024a0f1fa7b0917356be575c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def all_inputs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Collate all input plugs and their sub_plugs into one dictionary. </p>

</div>
</div>
<a class="anchor" id="a52b6e07332091d6d06e7b970b9ebc9ab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def all_outputs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Collate all output plugs and their sub_plugs into one dictionary. </p>

</div>
</div>
<a class="anchor" id="ad76778f87f61ef593a45ebb4ea2d4c4c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">def _sort_plugs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>plugs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sort the given plugs alphabetically into an OrderedDict. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="adfc4d1824f4ecdcbb04ceafc5bbc933e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">__metaclass__ = ABCMeta</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab74e6bf80237ddc4109968cedc58c151"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">name</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afc486b0767ef05e2dc12f5b98be72902"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">identifier</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="afde3b66b6b41bd008469f366fa756e54"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inputs</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af8d743b78404b120589eca8c77c1c2a9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">outputs</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9cfcb724bbf4bae5f97bc17cf58cf522"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">metadata</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a36c33cda455902e250ccc64842fb5ddc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">omit</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae317848454d4a83291a27290cde639e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">file_location</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3378f35ca205fd422d7edb3190867861"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">class_name</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/travis/build/PaulSchweizer/flowpipe/flowpipe/node.py</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d3d/namespaceflowpipe.xhtml">flowpipe</a></li><li class="navelem"><a class="el" href="../../d2/d08/namespaceflowpipe_1_1node.xhtml">node</a></li><li class="navelem"><a class="el" href="../../d9/d44/classflowpipe_1_1node_1_1INode.xhtml">INode</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
